apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "id.widiarifki.movie"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        multiDexEnabled true

        buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/3/\""
        buildConfigField "String", "API_KEY", "\"" + getApiKey() + "\""
        buildConfigField "String", "ACCOUNT_ID", "\"" + getAccountId() + "\""
        buildConfigField "String", "SESSION_ID", "\"" + getSessionId() + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
    kapt {
        generateStubs = true
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlin_version"
    implementation "com.google.android.material:material:$rootProject.material_version"
    implementation "com.google.code.gson:gson:$rootProject.gson_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.core:core-ktx:$rootProject.ktx_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayout_version"
    implementation "androidx.activity:activity-ktx:$rootProject.activity_version"
    implementation "androidx.multidex:multidex:$rootProject.multidex_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.paging:paging-runtime-ktx:$rootProject.paging_version"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLogging_version"
    implementation "com.facebook.fresco:fresco:$rootProject.fresco_version"
    implementation "com.pierfrancescosoffritti.androidyoutubeplayer:chromecast-sender:$rootProject.androidytplayer_version"

    kapt "androidx.room:room-compiler:$room_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Testing library
    testImplementation "junit:junit:$rootProject.junit_version"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junitTestExt_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_version"
}

def getApiKey() {
    return project.findProperty("api_key")
}

def getAccountId() {
    return project.findProperty("account_id")
}

def getSessionId() {
    return project.findProperty("session_id")
}